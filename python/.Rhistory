df_de_ta_mere <- read_csv("all_activities_df.csv")
df_de_ta_mere
df_de_ta_mere %>% filter(activity_id == 8008474669)
df_de_ta_mere %>% filter(activity_id == 8008474669) %>% select(watts)
df_de_ta_mere %>% filter(activity_id == 8008474669) %>% select(watts, heartrate)
df_de_ton_pere <- df_de_ta_mere %>%
filter(activity_id == 8008474669) %>%
select(watts, heartrate)
ggplot(df_de_ton_pere)
ggplot(df_de_ton_pere) +
geom_line(aex(x = watts, y = heartrate))
ggplot(df_de_ton_pere) +
geom_line(aes(x = watts, y = heartrate))
ggplot(df_de_ton_pere) +
geom_line(aes(x = watts, y = heartrate)) +
geom_smooth(method='lm', formula = heartrate ~ watts)
ggplot(df_de_ton_pere) +
geom_line(aes(x = watts, y = heartrate)) +
geom_smooth(method='lm', formula = y ~ x)
ggplot(df_de_ton_pere, aes(x = watts, y = heartrate)) +
geom_line() +
geom_smooth(method='lm', formula = heartrate ~ watts)
ggplot(df_de_ton_pere, aes(x = watts, y = heartrate)) +
geom_line() +
geom_smooth(method='lm', formula = y ~ x)
?geom_smooth
ggplot(df_de_ton_pere, aes(x = watts, y = heartrate)) +
geom_line() +
geom_smooth(formula = y ~ x)
ggplot(df_de_ton_pere, aes(x = watts, y = heartrate)) +
geom_line() +
geom_smooth(method = "glm", formula = y ~ x)
ggplot(df_de_ton_pere, aes(x = watts, y = heartrate)) +
geom_line() +
geom_smooth(method = "glm", formula = y ~ poly(x, 2))
df_de_ta_mere
source("~/Dropbox/UNIGE/Tuning/R Scripts/MSE_min.R", echo=TRUE)
source("~/Dropbox/UNIGE/Tuning/R Scripts/MSE_min.R", echo=TRUE)
library(tidyverse)
df_de_ta_mere <- read_csv("all_activities_df.csv")
setwd("~/Documents/GitHub/strava/python")
df_de_ta_mere <- read_csv("all_activities_df.csv")
df_de_ta_mere
ggplot(df_de_ta_mere, aes(x = activity_id, y = heartrate)) +
geom_boxplot()
df_de_ta_mere
df_de_ta_mere$activity_id <- as.factor(df_de_ta_mere$activity_id)
df_de_ta_mere
ggplot(df_de_ta_mere, aes(x = activity_id, y = heartrate)) +
geom_boxplot()
df_de_ton_pere <- df_de_ta_mere %>%
filter(activity_id == 8008474669) %>%
select(watts, heartrate)
ggplot(df_de_ton_pere, aes(y = heartrate)) +
geom_boxplot()
df_de_ta_mere
max(df_de_ta_mere$velocity_smooth)
df_de_ta_mere$velocity_smooth
8008474669
df_de_ton_pere <- df_de_ta_mere %>%
filter(activity_id == 8008474669) %>%
select(watts, heartrate, velocity_smooth)
df_de_ton_pere
df_de_ton_pere <- df_de_ta_mere %>%
filter(activity_id == 8008474669) %>%
select(watts, heartrate, velocity_smooth, distance, moving)
df_de_ton_pere
df_de_ton_pere$distance
diff(df_de_ton_pere$distance)
ggplot(df_de_ton_pere, aes(y = distance)) +
geom_line()
ggplot(df_de_ton_pere, aes(x = time, y = distance)) +
geom_line()
df_de_ta_mere
df_de_ton_pere <- df_de_ta_mere %>%
filter(activity_id == 8008474669) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time)
ggplot(df_de_ton_pere, aes(x = time, y = distance)) +
geom_line()
diff(df_de_ton_pere$distance) / diff(df_de_ton_pere$time)
diff(df_de_ton_pere$time)
diff(df_de_ton_pere$distance) * df_de_ton_pere$moving / diff(df_de_ton_pere$time)
df_de_ton_pere$moving
diff(df_de_ton_pere$distance) * df_de_ton_pere$moving[-1] / diff(df_de_ton_pere$time)
data_load <- read_csv("all_activities_df.csv")
shiny::runApp()
runApp()
runApp()
runApp()
activity_id
activity_id <- unique(data_load$activity_id)
activity_id
runApp()
runApp()
runApp()
runApp()
activity_id
runApp()
runApp()
runApp()
data_load
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_load$activity_id
data_load$activity_id <- as.factor(data_load$activity_id)
activity_id <- unique(data_load$activity_id)
runApp()
runApp()
data_load
runApp()
runApp()
runApp()
runApp()
runApp()
range(seq(1:10))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(data_load)
"watts" %in% names(data_load)
names(data_load) %in% watts
names(data_load) %in% "watts"
runApp()
data_load$watts
is.na(data_load$watts)
runApp()
runApp()
data_load
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?aes_string
?aes_string
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_smooth
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_load
length(unique(data_load$activity_id))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
activity_id
act_search <- vector()
for (j in 1:length(unique(data_load$activity_id))){
data_search <-  data_load %>%
filter(activity_id == unique(data_load$activity_id)[j]) %>%
select(distance)
act_search[j] <- diff(range(data_search$distance))
}
data_load %>%
filter(activity_id == unique(data_load$activity_id)[j]) %>%
select(distance)
unique(data_load$activity_id)[j]
data_search
diff(range(data_search$distance))
data_load %>%
filter(activity_id == unique(data_load$activity_id)[j]) %>%
select(distance)
act_search
data_load
data_load %>% group_by(activity_id) %>% summarize_all(min)
data_load %>% group_by(activity_id) %>% summarize(min = min(distance))
data_load %>% group_by(activity_id) %>% summarize(min)
data_load %>% group_by(activity_id) %>% summarize(min)
data_load
data_load %>% group_by(activity_id) %>% summarise(min)
data_load %>% group_by(activity_id) %>% summarise(mean)
data_load %>% group_by(activity_id) %>% summarise_all(mean)
data_load %>% group_by(activity_id) %>% summarise_all(min)
data_load %>% group_by(activity_id) %>% summarise_all(max)
data_max <- data_load %>% group_by(activity_id) %>% summarise_all(max)
which.max(data_max$distance)
unique(data_load$activity_id)[which.max(data_max$distance)]
num_act <- unique(data_load$activity_id)[which.max(data_max$distance)]
num_act
data <- data_load %>%
filter(activity_id == num_act) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time, altitude)
data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data_max
data_max <- data_load %>% group_by(activity_id) %>% summarise_all(mean)
data_mean <- data_load %>% group_by(activity_id) %>% summarise_all(mean)
data_mean
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data_max <- data_load %>% group_by(activity_id) %>% summarise_all(max)
data_max
data_max[data_max$distance > 1000]
data_max[data_max$distance > 1000, ]
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data_max
data_max[data_max$distance > 15000, ]
data_max <- data_max[data_max$distance > 15000, ]
data_max
runApp('~/Documents/GitHub/strava/Shiny')
data_max
data_max$distance
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data_max
data_max <- data_load %>% group_by(activity_id) %>% summarise_all(max)
data_max
data_max <- data_max[data_max$distance > 15000, ]
data_max
distance_tot <- data_max$distance / 1000
distance_tot
temps_heure <- data_max$time / 3600
temps_heure
vitesse_moy <- round(distance_tot / temps_heure, 2)
vitesse_moy
runApp('~/Documents/GitHub/strava/Shiny')
data_max$activity_id
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data <- data_load %>%
filter(activity_id == num_act) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time, altitude)
data
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data <- data_load %>%
filter(activity_id == num_act) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time, altitude)
distance_tot <- diff(range(data$distance)) / 1000
temps_heure <- diff(range(data$time)) / 3600
vitesse_moy <- round(distance_tot / temps_heure, 2)
vitesse_inst <- round((diff(data$distance) / 1000) /
(diff(data$time) / 3600), 2)
puissance_moy <- round(mean(data$watts, na.rm = T), 2)
puissance_moy
data_mean <- data_load %>% group_by(activity_id) %>% summarise_all(mean)
num_act <- unique(data_load$activity_id)[which.max(data_mean$watts)]
data <- data_load %>%
filter(activity_id == num_act) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time, altitude)
distance_tot <- diff(range(data$distance)) / 1000
temps_heure <- diff(range(data$time)) / 3600
vitesse_moy <- round(distance_tot / temps_heure, 2)
vitesse_inst <- round((diff(data$distance) / 1000) /
(diff(data$time) / 3600), 2)
puissance_moy <- round(mean(data$watts, na.rm = T), 2)
puissance_moy
data$watts
data_mean
data_mean <- data_load %>% group_by(activity_id) %>% summarise_all(mean)
num_act <- unique(data_load$activity_id)[which.max(data_mean$watts[-is.na(data_mean$watts)])]
num_act
data <- data_load %>%
filter(activity_id == num_act) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time, altitude)
distance_tot <- diff(range(data$distance)) / 1000
temps_heure <- diff(range(data$time)) / 3600
vitesse_moy <- round(distance_tot / temps_heure, 2)
vitesse_inst <- round((diff(data$distance) / 1000) /
(diff(data$time) / 3600), 2)
puissance_moy <- round(mean(data$watts, na.rm = T), 2)
puissance_moy
which.max(c(12, NA))
runApp('~/Documents/GitHub/strava/Shiny')
num_act
data_mean <- data_load %>% group_by(activity_id) %>% summarise_all(mean)
num_act <- data_mean$activity_id[which.max(data_mean$watts[-is.na(data_mean$watts)])]
data <- data_load %>%
filter(activity_id == num_act) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time, altitude)
distance_tot <- diff(range(data$distance)) / 1000
temps_heure <- diff(range(data$time)) / 3600
vitesse_moy <- round(distance_tot / temps_heure, 2)
vitesse_inst <- round((diff(data$distance) / 1000) /
(diff(data$time) / 3600), 2)
puissance_moy <- round(mean(data$watts, na.rm = T), 2)
puissance_moy
data$watts
data_mean
data_mean$watts
which.max(data_mean$watts)
num_act <- data_mean$activity_id[which.max(data_mean$watts)]
num_act
max(data_mean$watts)
?which,max
?which.max
data_mean <- data_load %>% group_by(activity_id) %>% summarise_all(mean(watts))
data_mean <- data_load %>% group_by(activity_id) %>% summarise(mean(watts))
data_mean
data_mean <- data_load %>% group_by(activity_id) %>% summarise(mean = mean(watts))
data_mean
data_load %>% group_by(activity_id) %>% summarise(mean = mean(watts))
data_mean <- data_load %>% group_by(activity_id) %>% summarise(mean = mean(watts, na.rm = T))
data_mean
data_load
data_mean <- data_load %>% group_by(activity_id) %>% summarise(mean(watts))
data_load %>% group_by(activity_id) %>% summarise(mean = mean(watts))
data_load %>% group_by(activity_id) %>% summarise(mean = mean(watts, na.rm = T))
data_load %>% group_by(activity_id) %>% summarise_all(mean = mean(watts, na.rm = T))
data_load %>% group_by(activity_id) %>% summarise_all(mean)
data_mean <- data_load %>%
filter(activity_id == num_act) %>%
select(watts)
data_mean
data_mean <- data_load %>%
filter(activity_id == num_act) %>%
select(activity_id, actiwatts)
data_mean <- data_load %>%
filter(activity_id == num_act) %>%
select(activity_id, watts)
data_mean
data_load %>% group_by(activity_id) %>% summarize(across(watts, ~ mean(.)))
data_load %>% group_by(activity_id) %>% summarise(across(watts, ~ mean(.)))
data_mean <- data_load %>%
filter(activity_id == num_act) %>%
select(activity_id, watts)
data_mean <- data_mean %>% group_by(activity_id) %>% summarise_all(mean)
data_mean
data_mean <- data_load %>%
group_by(activity_id) %>%
select(activity_id, watts)
data_mean
data_mean <- data_mean %>% group_by(activity_id) %>% summarise_all(mean)
data_mean
data_mean <- data_mean %>% group_by(activity_id) %>% summarise_all(mean, na.rm = T)
data_mean
max(data_mean$watts)
max(data_mean$watts, na.rm = T)
library(tidyverse)
data_load %>% group_by(activity_id) %>% summarize(across(watts, ~ mean(.)))
data_mean <- data_load %>%
group_by(activity_id) %>%
select(activity_id, watts)
data_mean
data_mean <- data_mean %>% group_by(activity_id) %>% summarise_all(mean, na.rm = T)
data_mean
data_mean$watts == NaN
is.nan(data_mean$watts)
data_mean[-is.nan(data_mean$watts), ]
data_mean
data_mean[-(is.nan(data_mean$watts)), ]
(is.nan(data_mean$watts))
data_mean[(is.nan(data_mean$watts)), ]
data_mean[(!is.nan(data_mean$watts)), ]
data_mean <- data_mean[(!is.nan(data_mean$watts)), ]
num_act <- data_mean$activity_id[which.max(data_mean$watts)]
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data_load
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
getwd()
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
install.packages("zoo")
library(zoo)
runApp('~/Documents/GitHub/strava/Shiny')
?rollmean
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data <- data_load %>%
filter(activity_id == num_act) %>%
select(watts, heartrate, velocity_smooth, distance, moving, time, altitude)
data
rollmean(data$watts, 15, align = "left")
data
tibble(rollmean(data$watts, 15, align = "left"))
tibble(rollmean(data$watts, 15, align = "left"),
rollmean(data$heartrate, 15, align = "left"))
data_rolled <- tibble(rollmean(data$watts, 15, align = "left"),
rollmean(data$heartrate, 15, align = "left"),
data$distance)
data_rolled <- tibble(rollmean(data$watts, 15, align = "left"),
rollmean(data$heartrate, 15, align = "left"),
data$distance[-1])
data$distance[-1]
data$distance
length(data$distance)
length(rollmean(data$watts, 15, align = "left"))
data_rolled <- tibble(rollmean(data$watts, 15, align = "left"),
rollmean(data$heartrate, 15, align = "left"))
names(data_rolled) <- c("watts", "heartrate")
data_rolled
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
data
data_rolled <- tibble(rollmean(data$watts, 15, align = "left"),
rollmean(data$heartrate, 15, align = "left"),
data$time[-(1:15)])
data$time[-(1:15)]
length(data$time[-(1:15)])
length(rollmean(data$watts, 15, align = "left"))
data
data_rolled <- tibble(rollmean(data$watts, 15, align = "left"),
rollmean(data$heartrate, 15, align = "left"),
data$time[-(1:14)])
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
?rollmean
rollapply(data$watts,
width=3,
FUN=function(x) mean(x, na.rm = TRUE),
by=1, by.column=TRUE, partial = TRUE, fill=NA, align="right")
rollmean(data$watts, 3, align = "left")
rollmean(data$watts, 200, align = "left")
rollmean(data$watts, 300, align = "left")
data$watts
runApp('~/Documents/GitHub/strava/Shiny')
runApp('~/Documents/GitHub/strava/Shiny')
